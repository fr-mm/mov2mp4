name: Build MOV to MP4 Converter

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        python-version: [3.12]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build with PyInstaller
      run: |
        pyinstaller --onefile --windowed --add-data "bin:bin" --name mov2mp4-macos --target-architecture universal2 main.py
    
    - name: Create macOS bundle (macOS only)
      if: runner.os == 'macOS'
      run: |
        mkdir -p "dist/mov2mp4.app/Contents/MacOS"
        mkdir -p "dist/mov2mp4.app/Contents/Resources"
        cp "dist/mov2mp4-macos" "dist/mov2mp4.app/Contents/MacOS/mov2mp4"
        chmod +x "dist/mov2mp4-macos"
        chmod +x "dist/mov2mp4.app/Contents/MacOS/mov2mp4"
        
        cat > "dist/mov2mp4.app/Contents/Info.plist" << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>CFBundleExecutable</key>
            <string>mov2mp4</string>
            <key>CFBundleIdentifier</key>
            <string>com.mov2mp4.converter</string>
            <key>CFBundleName</key>
            <string>MOV to MP4 Converter</string>
            <key>CFBundleVersion</key>
            <string>1.0</string>
            <key>CFBundleShortVersionString</key>
            <string>1.0</string>
            <key>CFBundlePackageType</key>
            <string>APPL</string>
            <key>CFBundleSignature</key>
            <string>????</string>
            <key>LSMinimumSystemVersion</key>
            <string>10.13</string>
            <key>NSHighResolutionCapable</key>
            <true/>
        </dict>
        </plist>
        EOF
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mov2mp4-macOS
        path: |
          dist/
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Create release assets
      run: |
        mkdir -p release-assets
        
        # Copy Linux build
        if [ -f "artifacts/mov2mp4-Linux/dist/mov2mp4-linux" ]; then
          cp "artifacts/mov2mp4-Linux/dist/mov2mp4-linux" "release-assets/mov2mp4-linux"
          chmod +x "release-assets/mov2mp4-linux"
        fi
        
        # Copy Windows build
        if [ -f "artifacts/mov2mp4-Windows/dist/mov2mp4-windows.exe" ]; then
          cp "artifacts/mov2mp4-Windows/dist/mov2mp4-windows.exe" "release-assets/mov2mp4-windows.exe"
        fi
        
        # Copy macOS builds
        if [ -f "artifacts/mov2mp4-macOS/dist/mov2mp4-macos" ]; then
          cp "artifacts/mov2mp4-macOS/dist/mov2mp4-macos" "release-assets/mov2mp4-macos"
          chmod +x "release-assets/mov2mp4-macos"
        fi
        
        if [ -d "artifacts/mov2mp4-macOS/dist/mov2mp4.app" ]; then
          cp -r "artifacts/mov2mp4-macOS/dist/mov2mp4.app" "release-assets/"
        fi
    
    - name: Upload release assets
      uses: actions/upload-artifact@v4
      with:
        name: release-assets
        path: release-assets/
        retention-days: 30
